dat = read.csv('~/Desktop/nature_disruption_open_access/data/analytical/wos_cdindex_normalized_analytical_df.csv')
head(dat)
tail(dat)
clif = readxl::read_xlsx('~/Documents/Research/arcadia-clifton/clifton_1.xlsx')
clif = as.data.frame(clif)
clif[is.na(clif)] = 0
rownames(clif) = clif[,1]
clif = clif[,2:ncol(clif)]
clif2 = readxl::read_xlsx('~/Documents/Research/arcadia-clifton/clifton_3.xlsx', )
clif2 = as.data.frame(clif2)
rownames(clif2) = clif2[,1]
clif2 = clif2[,2:ncol(clif2)]
clif2 = (clif2-30)*-1
clif2[is.na(clif2)] = 0
mat = clif+clif2
pca = prcomp(mat, scale = TRUE)
biplot(pca)
plot(pca$x[,1:2])
u = umap(mat)
hcl = hclust(dist(mat))
plot(hcl)
install.packages("umao")
install.packages("umap")
install.packages("umap")
library(umap)
u = umap(mat)
plot(u$layout)
text(u$layout, labels = rownames(u$layout))
u = umap(mat)
plot(u$layout, type = 'n')
text(u$layout, labels = rownames(u$layout))
install.packages("tidytext")
library(tidytext)
install.packages("tm")
install.packages("proxy")
install.packages("dplyr")
doc = read.delim('~/Desktop/science-semantic-tracing/00_data/chatgpt/genome1.txt')
doc = read.table('~/Desktop/science-semantic-tracing/00_data/chatgpt/genome1.txt')
doc
doc = unlist(read.table('~/Desktop/science-semantic-tracing/00_data/chatgpt/genome1.txt'))
doc
doc = unlist(as.data.frame(read.table('~/Desktop/science-semantic-tracing/00_data/chatgpt/genome1.txt')))
doc
doc[1,]
doc = unlist(as.data.frame(read.table('~/Desktop/science-semantic-tracing/00_data/chatgpt/genome1.txt'))[,1])
doc[,1]
unlist(doc[,1])
as.character(doc[,1])
as.character(as.data.frame(doc[,1]))
doc = read.table('~/Desktop/science-semantic-tracing/00_data/chatgpt/genome1.txt')
doc_corpus <- Corpus(VectorSource(doc))
library(tm)
library(proxy)
library(dplyr)
doc_corpus <- Corpus(VectorSource(doc))
doc_corpus
control_list <- list(removePunctuation = TRUE, stopwords = TRUE, tolower = TRUE)
tdm <- TermDocumentMatrix(doc_corpus, control = control_list)
tdm
tf <- as.matrix(tdm)
tf
idf <- log( ncol(tf) / ( 1 + rowSums(tf != 0) ) )
idf
idf <- diag(idf)
tf_idf <- crossprod(tf, idf)
colnames(tf_idf) <- rownames(tf)
tf_idf
tf_idf / sqrt( rowSums( tf_idfÂ² ) )
tf_idf
tf_idf / sqrt( rowSums( tf_idf^2 ) )
hist(tf_idf / sqrt( rowSums( tf_idf^2 ) ))
barplot(tf_idf / sqrt( rowSums( tf_idf^2 ) ))
barplot(tf_idf / sqrt( rowSums( tf_idf^2 ) ), las = 2)
sort(tf_idf)
tf_idf[order(tf_idf)]
tf_idf
unlist(tf_idf)
sort(unlist(tf_idf))
names(tf_idf[order(tf_idf)])
names(tf_idf)[order(tf_idf)]
names(tf_idf)
tf_idf[1]
as.numeric(tf_idf)
idf
tf
colnames(tf_idf)
colnames(tf_idf)[order(tf_idf)]
#Extract cross product
tf_idf <- crossprod(tf, idf)
#Add column names
colnames(tf_idf) <- rownames(tf)
names(tf_idf) = rownames(tf)
tf_idf
tf_idf <- unlist(crossprod(tf, idf))
tf_idf
names(tf_idf) = rownames(tf)
tf_idf
tf_idf <- crossprod(tf, idf)
tf_idf = unlist(tf_idf[1,])
tf_idf
names(tf_idf) = rownames(tf)
sort(tf_idf)
doc = read.table('~/Desktop/science-semantic-tracing/00_data/chatgpt/genome2.txt')
doc
doc = read.table('~/Desktop/science-semantic-tracing/00_data/chatgpt/genome2.txt')
doc = readLines('~/Desktop/science-semantic-tracing/00_data/chatgpt/genome2.txt')
doc
doc = readLines('~/Desktop/science-semantic-tracing/00_data/chatgpt/genome2.txt')
doc = as.character(as.data.frame(doc[,1]))
#Load
doc = readLines('~/Desktop/science-semantic-tracing/00_data/chatgpt/genome2.txt')
doc = unlist(doc)
doc
doc[1]
doc[2]
doc[3]
#Load
doc = readLines('~/Desktop/science-semantic-tracing/00_data/chatgpt/genome2.txt')
doc = unlist(doc)
#Create corpus
doc_corpus <- Corpus(VectorSource(doc))
#Generate TDM
control_list <- list(removePunctuation = TRUE, stopwords = TRUE, tolower = TRUE)
tdm <- TermDocumentMatrix(doc_corpus, control = control_list)
#Generate TF
tf <- as.matrix(tdm)
#Generate IDF
idf <- log( ncol(tf) / ( 1 + rowSums(tf != 0) ) )
#Extract diagonal
idf <- diag(idf)
#Extract cross product
tf_idf <- crossprod(tf, idf)
tf_idf = unlist(tf_idf[1,])
#Add column names
names(tf_idf) = rownames(tf)
#Calculate ratio
tf_idf = tf_idf / sqrt( rowSums( tf_idf^2 ) )
doc = readLines('~/Desktop/science-semantic-tracing/00_data/chatgpt/genome2.txt')
doc = as.character(doc)
doc_corpus <- Corpus(VectorSource(doc))
#Generate TDM
control_list <- list(removePunctuation = TRUE, stopwords = TRUE, tolower = TRUE)
tdm <- TermDocumentMatrix(doc_corpus, control = control_list)
#Generate TF
tf <- as.matrix(tdm)
#Generate IDF
idf <- log( ncol(tf) / ( 1 + rowSums(tf != 0) ) )
#Extract diagonal
idf <- diag(idf)
#Extract cross product
tf_idf <- crossprod(tf, idf)
tf_idf = unlist(tf_idf[1,])
#Add column names
names(tf_idf) = rownames(tf)
#Calculate ratio
tf_idf = tf_idf / sqrt( rowSums( tf_idf^2 ) )
doc = read.table('~/Desktop/science-semantic-tracing/00_data/chatgpt/genome3.txt')
doc
clif = readxl::read_xlsx('~/Documents/Research/arcadia-clifton/clifton_1.xlsx')
clif = as.data.frame(clif)
clif[is.na(clif)] = 0
rownames(clif) = clif[,1]
clif = clif[,2:ncol(clif)]
mat = clif
u = umap(mat)
plot(u$layout, type = 'n')
text(u$layout, labels = rownames(u$layout))
hcl = hclust(dist(mat))
plot(hcl)
pca = prcomp(mat, scale = TRUE)
biplot(pca)
u = umap(mat)
plot(u$layout, type = 'n')
text(u$layout, labels = rownames(u$layout))
IRkernel::installspec()
IRkernel::installspec(user = FALSE)
suppressPackageStartupMessages(source('01_utils/R/raman-taxonomy-utils.R'))
suppressPackageStartupMessages(source('../01_utils/R/raman-taxonomy-utils.R'))
getwd('')
getwd()
setwd('~/Documents/Research/github/raman-taxonomy/')
suppressPackageStartupMessages(source('01_utils/R/raman-taxonomy-utils.R'))
sessionInfo()
