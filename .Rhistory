size
size[1]
size = as.data.frame(read.csv('00_data/ho_et_al_2019/ho_2019_expanded_genome_statistics.csv'))
size = gsub("\\,", '', size)
size = as.data.frame(read.csv('00_data/ho_et_al_2019/ho_2019_expanded_genome_statistics.csv'))
gsub(",", ".", gsub("\\.", "", size))
as.data.frame(gsub("\\,", '', size))
as.data.frame(gsub(",", '', size))
size = as.data.frame(gsub(",", '', size))
size
size = as.data.frame(read.csv('00_data/ho_et_al_2019/ho_2019_expanded_genome_statistics.csv'))
gsub(',', '', size$GC.)
gsub(',', '', size$Protein)
size = apply(size, 2, function(x) gsub(',', '', x))
size = as.data.frame(read.csv('00_data/ho_et_al_2019/ho_2019_expanded_genome_statistics.csv'))
size = apply(size, 2, function(x) gsub('\\,', '', x))
size
as.data.frame(size)
#Load genome sizes
#size = read.csv('00_data/ho_et_al_2019/ho_2019_genome_statistics.csv')
size = as.data.frame(read.csv('00_data/ho_et_al_2019/ho_2019_expanded_genome_statistics.csv'))
size = as.data.frame(apply(size, 2, function(x) gsub('\\,', '', x)))
#Calculate pca
pca = prcomp(m2)
#Match genome size matrix to order of spectral data
size = size[match(rownames(pca$x), gsub(' ', '_', size$Genome)),]
#Remove 'Streptococcus_agalactiae'
size = size[!size$Genome == 'Streptococcus agalactiae',]
#Linear model
#summary(lm(pca$x[,1]~size$media_gc_content+size$median_genome_size+size$median_protein_count))
apply(size[,2:ncol(size)], 2, function(x) cor(x, as.numeric(pca$x[,1])))
size$Size..Mb.
as.numeric(size$Size..Mb.)
apply(size[,2:ncol(size)], 2, function(x) cor(as.numeric(x), as.numeric(pca$x[,1]), use = 'complete.obs'))
summary(lm(pca$x[,1]~size$Size..Mb.+size$GC.+size$Protein+size$rRNA+size$tRNA+size$rRNA+size$tRNA+size$Other.RNA+size$Gene))
data.matrix(size)
summary(lm(pca$x[,1]~data.matrix(size)))
summary(lm(pca$x[,1]~data.matrix(size[,2:ncol(size)])))
summary(lm(pca$x[,1]~data.matrix(size[,2:(ncol(size)-1)])))
#Linear models by window
len = 25
mods = list()
for(i in 1:(ncol(m2)-len)){
d = m2[,i:(i+len)]
pca = prcomp(d)
g = summary(lm(pca$x[,1]~size$Size..Mb.))[9]
p = summary(lm(pca$x[,1]~size$Protein))[9]
gc = summary(lm(pca$x[,1]~size$GC.))[9]
r = summary(lm(pca$x[,1]~size$rRNA))[9]
l = list(g, p, gc)
names(l) = c('genome', 'protein', 'gc', 'rrna')
mods[[as.character(i)]] = l
}
#Linear models by window
len = 25
mods = list()
for(i in 1:(ncol(m2)-len)){
d = m2[,i:(i+len)]
pca = prcomp(d)
g = summary(lm(pca$x[,1]~size$Size..Mb.))[9]
p = summary(lm(pca$x[,1]~size$Protein))[9]
gc = summary(lm(pca$x[,1]~size$GC.))[9]
r = summary(lm(pca$x[,1]~size$rRNA))[9]
l = list(g, p, gc,r)
names(l) = c('genome', 'protein', 'gc', 'rrna')
mods[[as.character(i)]] = l
}
plot(unlist(lapply(mods, function(x) x$gc)), type = 'l', ylim = c(-0.1,0.6))
lines(unlist(lapply(mods, function(x) x$genome)), col = 'red')
lines(unlist(lapply(mods, function(x) x$protein)), col = 'cyan4')
lines(unlist(lapply(mods, function(x) x$rrna)), col = 'gold4')
plot(unlist(lapply(mods, function(x) x$gc)), type = 'l', ylim = c(-1,1))
lines(unlist(lapply(mods, function(x) x$genome)), col = 'red')
lines(unlist(lapply(mods, function(x) x$protein)), col = 'cyan4')
lines(unlist(lapply(mods, function(x) x$rrna)), col = 'gold4')
mods$plot(unlist(lapply(mods, function(x) x$gc)), type = 'l', ylim = c(-1,1))
plot(unlist(lapply(mods, function(x) x$gc)), type = 'l', ylim = c(-1,1))
unlist(lapply(mods, function(x) x$gc))
size$GC.
len = 25
mods = list()
for(i in 1:(ncol(m2)-len)){
d = m2[,i:(i+len)]
pca = prcomp(d)
g = summary(lm(pca$x[,1]~as.numeric(size$Size..Mb.)))[9]
p = summary(lm(pca$x[,1]~as.numeric(size$Protein)))[9]
gc = summary(lm(pca$x[,1]~as.numeric(size$GC.)))[9]
r = summary(lm(pca$x[,1]~as.numeric(size$rRNA)))[9]
l = list(g, p, gc,r)
names(l) = c('genome', 'protein', 'gc', 'rrna')
mods[[as.character(i)]] = l
}
plot(unlist(lapply(mods, function(x) x$gc)), type = 'l', ylim = c(-1,1))
lines(unlist(lapply(mods, function(x) x$genome)), col = 'red')
lines(unlist(lapply(mods, function(x) x$protein)), col = 'cyan4')
lines(unlist(lapply(mods, function(x) x$rrna)), col = 'gold4')
plot(wav[1:length(mods)], unlist(lapply(mods, function(x) x$gc)), type = 'l', ylim = c(-1,1))
lines(unlist(lapply(mods, function(x) x$genome)), col = 'red')
lines(unlist(lapply(mods, function(x) x$protein)), col = 'cyan4')
lines(unlist(lapply(mods, function(x) x$rrna)), col = 'gold4')
plot(wav[1:length(mods)], unlist(lapply(mods, function(x) x$gc)), type = 'l', ylim = c(-1,1))
lines(wav[1:length(mods)], unlist(lapply(mods, function(x) x$genome)), col = 'red')
lines(wav[1:length(mods)], unlist(lapply(mods, function(x) x$protein)), col = 'cyan4')
lines(wav[1:length(mods)], unlist(lapply(mods, function(x) x$rrna)), col = 'gold4')
plot(wav[1:length(mods)], unlist(lapply(mods, function(x) x$gc)), type = 'l', ylim = c(-0.1,1))
lines(wav[1:length(mods)], unlist(lapply(mods, function(x) x$genome)), col = 'red')
lines(wav[1:length(mods)], unlist(lapply(mods, function(x) x$protein)), col = 'cyan4')
lines(wav[1:length(mods)], unlist(lapply(mods, function(x) x$rrna)), col = 'gold4')
plot(wav[1:length(mods)], unlist(lapply(mods, function(x) x$gc)), type = 'l', ylim = c(-0.1,1))
lines(wav[1:length(mods)], unlist(lapply(mods, function(x) x$rrna)), col = 'gold4')
cor(mn, unlist(lapply(mods, function(x) x$gc)))
plot(mn, unlist(lapply(mods, function(x) x$gc)))
plot(mn, unlist(lapply(mods, function(x) x$gc)), type = 'l')
plot(mn[1:100], unlist(lapply(mods, function(x) x$gc))[1:100])
plot(wav[1:length(mn)], mn, type = 'l')
plot(wav[1:length(mn)], mn, type = 'l')
lines(wav[1:length(mn)], unlist(lapply(mods, function(x) x$gc)), col = 'red')
plot(wav[1:length(mn)], mn, type = 'l', ylim = c(-0.1, 0.8))
lines(wav[1:length(mn)], unlist(lapply(mods, function(x) x$gc)), col = 'red')
#Linear models by window
len = 25
mods = list()
for(i in 1:(ncol(m2)-len)){
d = m2[,i:(i+len)]
pca = prcomp(d)
g = summary(lm(pca$x[,1]~as.numeric(size$Size..Mb.)))[9]
p = summary(lm(pca$x[,1]~as.numeric(size$Protein)))[9]
gc = summary(lm(pca$x[,1]~as.numeric(size$GC.)))[8]
r = summary(lm(pca$x[,1]~as.numeric(size$rRNA)))[9]
l = list(g, p, gc,r)
names(l) = c('genome', 'protein', 'gc', 'rrna')
mods[[as.character(i)]] = l
}
plot(wav[1:length(mn)], mn, type = 'l', ylim = c(-0.1, 0.8))
lines(wav[1:length(mn)], unlist(lapply(mods, function(x) x$gc)), col = 'red')
cor(mn, unlist(lapply(mods, function(x) x$gc)))
#Linear models by window
len = 25
mods = list()
for(i in 1:(ncol(m2)-len)){
d = m2[,i:(i+len)]
pca = prcomp(d)
g = summary(lm(pca$x[,1]~as.numeric(size$Size..Mb.)))[9]
p = summary(lm(pca$x[,1]~as.numeric(size$Protein)))[9]
gc = summary(lm(pca$x[,1]~as.numeric(size$GC.)))[9]
r = summary(lm(pca$x[,1]~as.numeric(size$rRNA)))[9]
l = list(g, p, gc,r)
names(l) = c('genome', 'protein', 'gc', 'rrna')
mods[[as.character(i)]] = l
}
plot(wav[1:length(mn)], mn, type = 'l', ylim = c(-0.1, 0.8))
lines(wav[1:length(mn)], unlist(lapply(mods, function(x) x$gc)), col = 'red')
mod = lm(mn~unlist(lapply(mods, function(x) x$gc))+unlist(lapply(mods, function(x) x$genome))+unlist(lapply(mods, function(x) x$protein))+
unlist(lapply(mods, function(x) x$rrna)))
summary(mod)
summay(lm(mn~unlist(lapply(mods, function(x) x$gc))))
summary(lm(mn~unlist(lapply(mods, function(x) x$gc))))
mod = lm(mn~unlist(lapply(mods, function(x) x$gc))+unlist(lapply(mods, function(x) x$genome))+unlist(lapply(mods, function(x) x$protein))+
unlist(lapply(mods, function(x) x$rrna)))
mod
summary(mod)
names(mods$1)
names(mods[[1]])
colnames(size)
o = apply(size[,2:ncol(size)], 2, function(x) summary(lm(pca$x[,1]~as.numeric(x)))[9])
o
len = 25
mods = list()
for(i in 1:(ncol(m2)-len)){
d = m2[,i:(i+len)]
pca = prcomp(d)
o = apply(size[,2:ncol(size)], 2, function(x) summary(lm(pca$x[,1]~as.numeric(x)))[9])
mods[[as.character(i)]] = 0
}
names(mods[[1]])
mods[[1]]
mods
o
len = 25
mods = list()
for(i in 1:(ncol(m2)-len)){
d = m2[,i:(i+len)]
pca = prcomp(d)
o = apply(size[,2:ncol(size)], 2, function(x) summary(lm(pca$x[,1]~as.numeric(x)))[9])
mods[[as.character(i)]] = o
}
names(mods[[1]])
plot(wav[1:length(mods)], unlist(lapply(mods, function(x) x$GC.)), type = 'l', ylim = c(-0.1,1))
plot(wav[1:length(mods)], unlist(lapply(mods, function(x) x$GC.)), type = 'l', ylim = c(-0.1,1))
lines(wav[1:length(mods)], unlist(lapply(mods, function(x) x$Protein)), col = 'red')
lines(wav[1:length(mods)], unlist(lapply(mods, function(x) x$Size..Mb.)), col = 'cyan4')
lines(wav[1:length(mods)], unlist(lapply(mods, function(x) x$rRNA)), col = 'gold4')
mod = lm(mn~unlist(lapply(mods, function(x) x$Size..Mb.))+unlist(lapply(mods, function(x) x$GC.))+unlist(lapply(mods, function(x) x$Protein))+
unlist(lapply(mods, function(x) x$rRNA))+unlist(lapply(mods, function(x) x$tRNA))+unlist(lapply(mods, function(x) x$Other.RNA))+
unlist(lapply(mods, function(x) x$Gene))+unlist(lapply(mods, function(x) x$Pseudogene)))
summary(mod)
lines(wav[1:length(mods)], unlist(lapply(mods, function(x) x$Size..Mb.)), col = 'cyan4')
plot(wav[1:length(mods)], unlist(lapply(mods, function(x) x$GC.)), type = 'l', ylim = c(-0.1,1))
lines(wav[1:length(mods)], unlist(lapply(mods, function(x) x$Size..Mb.)), col = 'cyan4')
plot(predict(mod, mn))
predict(mn, mod)
summary(mod)
cors = c()
for(i in 1:length(mods[[1]])){
cors = c(cors, cor(mr, unlist(lapply(mods, function(x) x[i]))))
}
cors = c()
for(i in 1:length(mods[[1]])){
cors = c(cors, cor(mn, unlist(lapply(mods, function(x) x[i]))))
}
cors
names(cors) = names(mods[[1]])
cors
predict(mn, unlist(lapply(mods, function(x) x$Size..Mb.))+unlist(lapply(mods, function(x) x$GC.))+unlist(lapply(mods, function(x) x$Protein))+
unlist(lapply(mods, function(x) x$rRNA))+unlist(lapply(mods, function(x) x$tRNA))+unlist(lapply(mods, function(x) x$Other.RNA))+
unlist(lapply(mods, function(x) x$Gene))+unlist(lapply(mods, function(x) x$Pseudogene)))
predict(mod, unlist(lapply(mods, function(x) x$Size..Mb.))+unlist(lapply(mods, function(x) x$GC.))+unlist(lapply(mods, function(x) x$Protein))+
unlist(lapply(mods, function(x) x$rRNA))+unlist(lapply(mods, function(x) x$tRNA))+unlist(lapply(mods, function(x) x$Other.RNA))+
unlist(lapply(mods, function(x) x$Gene))+unlist(lapply(mods, function(x) x$Pseudogene)))
predict(mod, cbind(unlist(lapply(mods, function(x) x$Size..Mb.))+unlist(lapply(mods, function(x) x$GC.))+unlist(lapply(mods, function(x) x$Protein))+
unlist(lapply(mods, function(x) x$rRNA))+unlist(lapply(mods, function(x) x$tRNA))+unlist(lapply(mods, function(x) x$Other.RNA))+
unlist(lapply(mods, function(x) x$Gene))+unlist(lapply(mods, function(x) x$Pseudogene))))
predict(mod, as.matrix(cbind(unlist(lapply(mods, function(x) x$Size..Mb.))+unlist(lapply(mods, function(x) x$GC.))+unlist(lapply(mods, function(x) x$Protein))+
unlist(lapply(mods, function(x) x$rRNA))+unlist(lapply(mods, function(x) x$tRNA))+unlist(lapply(mods, function(x) x$Other.RNA))+
unlist(lapply(mods, function(x) x$Gene))+unlist(lapply(mods, function(x) x$Pseudogene)))))
predict(mod, as.data.frame(cbind(unlist(lapply(mods, function(x) x$Size..Mb.))+unlist(lapply(mods, function(x) x$GC.))+unlist(lapply(mods, function(x) x$Protein))+
unlist(lapply(mods, function(x) x$rRNA))+unlist(lapply(mods, function(x) x$tRNA))+unlist(lapply(mods, function(x) x$Other.RNA))+
unlist(lapply(mods, function(x) x$Gene))+unlist(lapply(mods, function(x) x$Pseudogene)))))
pred = as.data.frame(cbind(unlist(lapply(mods, function(x) x$Size..Mb.))+unlist(lapply(mods, function(x) x$GC.))+unlist(lapply(mods, function(x) x$Protein))+
unlist(lapply(mods, function(x) x$rRNA))+unlist(lapply(mods, function(x) x$tRNA))+unlist(lapply(mods, function(x) x$Other.RNA))+
unlist(lapply(mods, function(x) x$Gene))+unlist(lapply(mods, function(x) x$Pseudogene))))
mod = lm(mn~pred)
mod = lm(mn~as.matrix(pred))
summary(mod)
pred = as.data.frame(rbind(unlist(lapply(mods, function(x) x$Size..Mb.))+unlist(lapply(mods, function(x) x$GC.))+unlist(lapply(mods, function(x) x$Protein))+
unlist(lapply(mods, function(x) x$rRNA))+unlist(lapply(mods, function(x) x$tRNA))+unlist(lapply(mods, function(x) x$Other.RNA))+
unlist(lapply(mods, function(x) x$Gene))+unlist(lapply(mods, function(x) x$Pseudogene))))
mod = lm(mn~as.matrix(pred))
plot(predict(mod, as.data.frame(cbind(unlist(lapply(mods, function(x) x$Size..Mb.))+unlist(lapply(mods, function(x) x$GC.))+unlist(lapply(mods, function(x) x$Protein))+
unlist(lapply(mods, function(x) x$rRNA))+unlist(lapply(mods, function(x) x$tRNA))+unlist(lapply(mods, function(x) x$Other.RNA))+
unlist(lapply(mods, function(x) x$Gene))+unlist(lapply(mods, function(x) x$Pseudogene))))))
predict(mod, as.data.frame(cbind(unlist(lapply(mods, function(x) x$Size..Mb.))+unlist(lapply(mods, function(x) x$GC.))+unlist(lapply(mods, function(x) x$Protein))+
unlist(lapply(mods, function(x) x$rRNA))+unlist(lapply(mods, function(x) x$tRNA))+unlist(lapply(mods, function(x) x$Other.RNA))+
unlist(lapply(mods, function(x) x$Gene))+unlist(lapply(mods, function(x) x$Pseudogene)))))
as.data.frame(cbind(unlist(lapply(mods, function(x) x$Size..Mb.))+unlist(lapply(mods, function(x) x$GC.))+unlist(lapply(mods, function(x) x$Protein))+
unlist(lapply(mods, function(x) x$rRNA))+unlist(lapply(mods, function(x) x$tRNA))+unlist(lapply(mods, function(x) x$Other.RNA))+
unlist(lapply(mods, function(x) x$Gene))+unlist(lapply(mods, function(x) x$Pseudogene)))))
as.data.frame(cbind(unlist(lapply(mods, function(x) x$Size..Mb.))+unlist(lapply(mods, function(x) x$GC.))+unlist(lapply(mods, function(x) x$Protein))+
unlist(lapply(mods, function(x) x$rRNA))+unlist(lapply(mods, function(x) x$tRNA))+unlist(lapply(mods, function(x) x$Other.RNA))+
unlist(lapply(mods, function(x) x$Gene))+unlist(lapply(mods, function(x) x$Pseudogene))))
len = 25
mods = list()
for(i in 1:(ncol(m2)-len)){
d = m2[,i:(i+len)]
pca = prcomp(d)
o = apply(size[,2:ncol(size)], 2, function(x) summary(lm(pca$x[,1]~as.numeric(x)))[9])
mods[[as.character(i)]] = o
}
unlist(lapply(mods, function(x) x$Size..Mb.))
plot(predict(mod, as.data.frame(cbind(unlist(lapply(mods, function(x) x$Size..Mb.))+unlist(lapply(mods, function(x) x$GC.))+unlist(lapply(mods, function(x) x$Protein))+
unlist(lapply(mods, function(x) x$rRNA))+unlist(lapply(mods, function(x) x$tRNA))+unlist(lapply(mods, function(x) x$Other.RNA))+
unlist(lapply(mods, function(x) x$Gene))+unlist(lapply(mods, function(x) x$Pseudogene))))))
mod = lm(mn~unlist(lapply(mods, function(x) x$Size..Mb.))+unlist(lapply(mods, function(x) x$GC.))+unlist(lapply(mods, function(x) x$Protein))+
unlist(lapply(mods, function(x) x$rRNA))+unlist(lapply(mods, function(x) x$tRNA))+unlist(lapply(mods, function(x) x$Other.RNA))+
unlist(lapply(mods, function(x) x$Gene))+unlist(lapply(mods, function(x) x$Pseudogene)))
summary(mod)
plot(predict(mod, as.data.frame(cbind(unlist(lapply(mods, function(x) x$Size..Mb.))+unlist(lapply(mods, function(x) x$GC.))+unlist(lapply(mods, function(x) x$Protein))+
unlist(lapply(mods, function(x) x$rRNA))+unlist(lapply(mods, function(x) x$tRNA))+unlist(lapply(mods, function(x) x$Other.RNA))+
unlist(lapply(mods, function(x) x$Gene))+unlist(lapply(mods, function(x) x$Pseudogene))))))
plot(predict(mod, as.data.frame(cbind(unlist(lapply(mods, function(x) x$Size..Mb.))+unlist(lapply(mods, function(x) x$GC.))+unlist(lapply(mods, function(x) x$Protein))+
unlist(lapply(mods, function(x) x$rRNA))+unlist(lapply(mods, function(x) x$tRNA))+unlist(lapply(mods, function(x) x$Other.RNA))+
unlist(lapply(mods, function(x) x$Gene))+unlist(lapply(mods, function(x) x$Pseudogene))))), type = 'l')
plot(predict(mod, as.data.frame(cbind(unlist(lapply(mods, function(x) x$Size..Mb.))+unlist(lapply(mods, function(x) x$GC.))+unlist(lapply(mods, function(x) x$Protein))+
unlist(lapply(mods, function(x) x$rRNA))+unlist(lapply(mods, function(x) x$tRNA))+unlist(lapply(mods, function(x) x$Other.RNA))+
unlist(lapply(mods, function(x) x$Gene))+unlist(lapply(mods, function(x) x$Pseudogene))))), type = 'l')
lines(mn, col = 'red')
mod$coefficients
plot(mod$coefficients)
summary(mod)
plot(mod$fitted.values)
plot(mod$residuals)
summary(mod)[8]
summary(mod)[7]
summary(mod)[6]
summary(mod)[5]
summary(mod)[4]
summary(mod)[4][,3]
summary(mod)[4][[1]]
summary(mod)[4][[1]][,3]
plot(summary(mod)[4][[1]][,3])
plot(predict(mod, as.data.frame(cbind(unlist(lapply(mods, function(x) x$Size..Mb.))+unlist(lapply(mods, function(x) x$GC.))+unlist(lapply(mods, function(x) x$Protein))+
unlist(lapply(mods, function(x) x$rRNA))+unlist(lapply(mods, function(x) x$tRNA))+unlist(lapply(mods, function(x) x$Other.RNA))+
unlist(lapply(mods, function(x) x$Gene))+unlist(lapply(mods, function(x) x$Pseudogene))))), type = 'l')
lines(mod$fitted.values, col = 'red')
plot(mn, mod$fitted.values)
abline(mod)
plot(unlist(lapply(mods, function(x) x$GC.)))
tmp = unlist(lapply(mods, function(x) x$GC.))
tmp
tmp[tmp<0.01] = 0
tmp
plot(tmp)
cor(tmp, mn)
tmp = unlist(lapply(mods, function(x) x$GC.))
tmp[tmp<0.1] = 0
cor(tmp, mn)
plot(tmp, mn)
plot(tmp)
plot(tmp, type = 'l')
lines(mn, col = 'red')
tmp = unlist(lapply(mods, function(x) x$GC.))
tmp[tmp<0.2] = 0
cor(tmp, mn)
plot(summary(mod)[4][[1]][,3])
plot(summary(mod)[4][[1]][,3])
ts
ts = summary(mod)[4][[1]][,3]
ts
names(ts) = c("Intercept", 'Genome size', 'GC', 'Protein #', 'rRNA #', 'tRNA #', 'Other RNA #', 'Gene #', 'Pseudogene #')
plot(ts)
#Plot t-values
ts = summary(mod)[4][[1]][,3]
names(ts) = c("Intercept", 'Genome size', 'GC', 'Protein #', 'rRNA #', 'tRNA #', 'Other RNA #', 'Gene #', 'Pseudogene #')
plot(ts)
BIC(mod)
mod2 = lm(mn~unlist(lapply(mods, function(x) x$GC.)))
BIC(mod2)
AIC(mod2)
AIC(mod)
ts = summary(mod)[4][[1]][,3]
names(ts) = c("Intercept", 'Genome size', 'GC', 'Protein #', 'rRNA #', 'tRNA #', 'Other RNA #', 'Gene #', 'Pseudogene #')
plot(ts)
barplot(ts)
barplot(ts[2:length(ts)])
mod
summary(mod)
barplot(mod$coefficients)
barplot(ts[2:length(ts)], ylab = '')
barplot(ts[2:length(ts)], ylab = '', las = 2)
barplot(ts[2:length(ts)],
ylab = 't-value',
las = 2,
cex.lab = 1.5,
cex.axiw = 1.5)
barplot(ts[2:length(ts)],
ylab = 't-value',
las = 2,
cex.lab = 1.5,
cex.axis = 1.5)
barplot(ts[2:length(ts)],
ylab = 't-value',
las = 2,
cex.lab = 1.5,
cex.axis = 1.5,
col = 'gray80',
border = 'gray80')
plot(wav[1:length(mods)], unlist(lapply(mods, function(x) x$GC.)), type = 'l', ylim = c(-0.1,1))
mg = apply(m2, 2, function(x) minerva::mine(x, size$median_genome_size)$MIC)
minerva::mine(phylosig_spectra, mp)
size
?mine
len = 25
mods2 = list()
for(i in 1:(ncol(m2)-len)){
d = m2[,i:(i+len)]
pca = prcomp(d)
o = apply(size[,2:ncol(size)], 2, function(x) minerva::mine(pca$x[,1], as.numeric(x))$MIC)
mods2[[as.character(i)]] = o
}
mods2 = list()
for(i in 1:(ncol(m2)-len)){
d = m2[,i:(i+len)]
pca = prcomp(d)
o = apply(size[,2:ncol(size)], 2, function(x) minerva::mine(pca$x[,1], as.numeric(x), use = 'pairwise.complete.obs')$MIC)
mods2[[as.character(i)]] = o
}
mods2
plot(unlist(lapply(mods2, function(x) x$Size..Mb.)), type = 'l')
mods2$1
mods2[[1]]
plot(unlist(lapply(mods2, function(x) x[1])), type = 'l')
plot(unlist(lapply(mods2, function(x) x[2])), type = 'l')
plot(wav[1:length(mn)],
mn,
type = 'n',
bty = 'n',
ylim = c(0,0.8),
cex.axis = 1.5,
cex.lab = 1.5,
ylab = 'Phylogenetic signal',
xlab = 'Wavenumber (cm -1)')
plot(wav[1:length(mn)],
mn,
type = 'l',
bty = 'n',
ylim = c(0,0.8),
cex.axis = 1.5,
cex.lab = 1.5,
ylab = 'Phylogenetic signal',
xlab = 'Wavenumber (cm -1)')
lines(wav[1:length(mn)],
unlist(lapply(mods, function(x) x$GC.)),
col = 'red')
plot(wav[1:length(mn)],
mn,
type = 'l',
bty = 'n',
ylim = c(-0.1,0.8),
cex.axis = 1.5,
cex.lab = 1.5,
ylab = 'Phylogenetic signal',
xlab = 'Wavenumber (cm -1)')
lines(wav[1:length(mn)],
unlist(lapply(mods, function(x) x$GC.)),
col = 'red')
cors = c()
for(i in 1:length(mods[[1]])){
cors = c(cors, cor(mn, unlist(lapply(mods, function(x) x[i]))))
}
names(cors) = names(mods[[1]])
cors
cors = c()
for(i in 1:length(mods[[1]])){
#cors = c(cors, cor(mn, unlist(lapply(mods, function(x) x[i]))))
cors = c(cors, minerva::mine(mn, unlist(lapply(mods, function(x) x[i])))$MIC)
}
names(cors) = names(mods[[1]])
cors
cors = c()
for(i in 1:length(mods[[1]])){
cors = c(cors, cor(mn, unlist(lapply(mods, function(x) x[i]))))
}
names(cors) = names(mods[[1]])
plot(cors)
barplot(ts[2:length(ts)],
ylab = 't-value',
las = 2,
cex.lab = 1.5,
cex.axis = 1.5,
col = 'gray80',
border = 'gray80')
plot(1:length(cors),
cors)
plot(cors,
1:length(cors))
plot(cors,
ylim = c(-0.6,0.6))
plot(cors,
ylim = c(-0.8,0.8))
barplot(cors,
ylim = c(-0.8,0.8))
barplot(cors,
ylim = c(-0.8,0.8),
las = 2,
cex.lab = 1.5,
cex.axis = 1.5,
col = 'gray80',
border = 'gray80')
barplot(cors,
ylim = c(-0.8,0.8),
las = 2,
ylab = 'r2',
cex.lab = 1.5,
cex.axis = 1.5,
col = 'gray80',
border = 'gray80')
barplot(cors,
ylim = c(-0.8,0.8),
las = 2,
ylab = 'Correlation coefficient',
cex.lab = 1.5,
cex.axis = 1.5,
col = 'gray80',
border = 'gray80')
plot(wav[1:length(mn)],
mn,
type = 'l',
bty = 'n',
ylim = c(-0.1,0.8),
cex.axis = 1.5,
cex.lab = 1.5,
ylab = 'Phylogenetic signal',
xlab = 'Wavenumber (cm -1)')
lines(wav[1:length(mn)],
unlist(lapply(mods, function(x) x$GC.)),
col = 'red')
#Linear models by window
len = 25
mods = list()
for(i in 1:(ncol(m2)-len)){
d = m2[,i:(i+len)]
pca = prcomp(d)
o = apply(size[,2:ncol(size)], 2, function(x) summary(lm(pca$x[,2]~as.numeric(x)))[9])
mods[[as.character(i)]] = o
}
plot(wav[1:length(mods)], unlist(lapply(mods, function(x) x$GC.)), type = 'l', ylim = c(-0.1,1))
lines(wav[1:length(mods)], unlist(lapply(mods, function(x) x$Protein)), col = 'red')
lines(wav[1:length(mods)], unlist(lapply(mods, function(x) x$Size..Mb.)), col = 'cyan4')
lines(wav[1:length(mods)], unlist(lapply(mods, function(x) x$rRNA)), col = 'gold4')
len = 25
mods = list()
for(i in 1:(ncol(m2)-len)){
d = m2[,i:(i+len)]
pca = prcomp(d)
o = apply(size[,2:ncol(size)], 2, function(x) summary(lm(pca$x[,1]~as.numeric(x)))[9])
mods[[as.character(i)]] = o
}
plot(wav[1:length(mods)], unlist(lapply(mods, function(x) x$GC.)), type = 'l', ylim = c(-0.1,1))
lines(wav[1:length(mods)], unlist(lapply(mods, function(x) x$Protein)), col = 'red')
lines(wav[1:length(mods)], unlist(lapply(mods, function(x) x$Size..Mb.)), col = 'cyan4')
lines(wav[1:length(mods)], unlist(lapply(mods, function(x) x$rRNA)), col = 'gold4')
cors
